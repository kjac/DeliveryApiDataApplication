@page "/post/{slug}"
@using Models
@using BlazorBlog.Components
@using BlazorBlog.Services
@inject IContentService ContentService

@{
    @* Header *@
    <header class="w-full m-0 p-0 bg-cover bg-bottom" style="background-color: #3F46B1">
        <div class="container max-w-4xl mx-auto p-8 text-center break-normal">
            <NavLink href="/" class="text-white font-extrabold text-3xl md:text-5xl">
                The Blazor Blog
            </NavLink>
        </div>
    </header>

    @* TODO: add some kind of skeleton loading while fetching the blog post *@
    @if (_post is not null)
    {
        @* Title *@
        <div class="text-center pt-16">
            <p class="md:text-sm pt-2 text-gray-600 text-xs">@_post.Date.ToShortDateString()</p>
            <h1 class="font-bold break-normal text-3xl md:text-5xl">@_post.Title</h1>
            <p class="md:text-sm pt-2 text-gray-600 text-xs"><PostTags Post="@_post"></PostTags></p>
        </div>

        @* Cover image *@
        <div class="container w-full max-w-6xl mx-auto bg-white bg-no-repeat bg-center mt-8 rounded" style="background-image:url('@_post.CoverImage.Url'); height: 75vh;"></div>

    	@* Container *@
        <div class="container max-w-5xl mx-auto -mt-32">

            <div class="mx-0 sm:mx-6 rounded-t rounded-b-none overflow-hidden shadow-lg mb-8">

                @* Author *@
                <NavLink href="@RenderHelpers.AuthorLink(_post.Author)" class="flex w-full items-center font-sans p-8 bg-gray-200">
                    <img class="w-10 h-10 rounded-full mr-4" src="@_post.Author.Picture.Url" alt="@_post.Author.Name">
                    <div class="flex-1">
                        <p class="text-base font-bold text-base md:text-xl leading-none">@_post.Author.Name</p>
                    </div>
                </NavLink>

                @* Post content *@
                <div class="bg-white w-full p-8 md:p-24 text-lg font-serif text-gray-800 leading-normal">
                    <div>
                        @_post.Content
                    </div>
                </div>

            </div>

            @* More posts *@
            @if (_post.LatestPosts.Any())
            {
                <div class="bg-gray-200 mx-0 sm:mx-6">
                    <div class="text-center pb-6">
                        <h2 class="font-bold break-normal text-3xl md:text-5xl">Keep on reading</h2>
                    </div>
                    <div class="container w-full max-w-6xl mx-auto">
                        <div class="flex flex-wrap -mx-2">
                            @foreach (var post in _post.LatestPosts)
                            {
                                <div class="w-full md:w-1/3 px-2">
                                    <div class="h-full bg-white rounded overflow-hidden shadow-md hover:shadow-lg relative smooth">
                                        <div class="no-underline hover:no-underline">
                                            <NavLink href="@RenderHelpers.PostLink(post)">
                                                <img src="@post.CoverImage.Url" class="w-full rounded-t pt-4" alt="@post.CoverImage.Title">
                                            </NavLink>
                                            <div class="p-6 h-auto">
                                                <p class="text-gray-600 text-xs md:text-sm">@post.Date.ToShortDateString()</p>
                                                <div class="font-bold text-xl text-gray-900">@post.Title</div>
                                                <p class="text-gray-600 text-xs md:text-sm"><PostTags Post="@post"></PostTags></p>
                                                <p class="text-gray-800 font-serif text-base mb-5 pt-6">@post.Excerpt</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }

        </div>
        <Footer></Footer>
    }
}

@code {
    [Parameter]
    public string Slug { get; set; } = string.Empty;

    private Post? _post;
    
    protected override async Task OnParametersSetAsync()
    {
        _post = await ContentService.PostAsync(Slug);
    }
}